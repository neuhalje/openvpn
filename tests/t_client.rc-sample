#
# this is sourced from t_client.sh and defines which openvpn client tests
# to run
#
# (sample config, copy to t_client.rc and adapt to your environment)
#
# This script is also sourced by the example OpenVPN servers (Vagrant files).
#
# The example servers can be run for instant remote endpoints for t_client.sh
#
# define these - if empty, no tests will run
#
top_srcdir="${top_srcdir:-..}"
CA_CERT="${top_srcdir}/sample/sample-keys/ca.crt"
CLIENT_KEY="${top_srcdir}/sample/sample-keys/client.key"
CLIENT_CERT="${top_srcdir}/sample/sample-keys/client.crt"
#
# Configuration for the test server started via vagrant
#
VM_SERVER_KEY="${top_srcdir}/sample/sample-keys/server.key"
VM_SERVER_CERT="${top_srcdir}/sample/sample-keys/server.crt"
VM_SERVER_DH="${top_srcdir}/sample/sample-keys//dh2048.pem"

#
VM_SERVER_IP="10.8.0.1"
# Passed as --server $VM_SERVER_NET $VM_SERVER_MASK
VM_SERVER_NET="10.8.0.0"
VM_SERVER_MASK="255.255.255.0"

#
# remote host (used as macro below and for the test server in the vm)
# When the test server (Vagrant) is used, make sure that
# the IP  equals the IP in Vagrantfile
REMOTE_IP="192.168.33.67"
REMOTE_PORT="51194"

#
# tests to run (list suffixes for config stanzas below)
#
TEST_RUN_LIST="1 2"

#
# use "sudo" (etc) to give openvpn the necessary privileges
# if this is not active, "make check" must be run as root
#
#RUN_SUDO=sudo

#
# base confic that is the same for all the p2mp test runs
#
OPENVPN_BASE_P2MP="--client --ca $CA_CERT \
	--cert $CLIENT_CERT --key $CLIENT_KEY \
	--ns-cert-type server --nobind --comp-lzo --verb 3"

# base config for p2p tests
#
OPENVPN_BASE_P2P="..."

#
#
# now define the individual tests - all variables suffixed with _1, _2 etc
# will be used in test run "1", "2", etc.
#
# if something is not defined here, the corresponding test is not run
#
# possible test options:
#
# RUN_TITLE_x="what is being tested on here" (purely informational)
# OPENVPN_CONF_x = "how to call ./openvpn" [mandatory]
# EXPECT_IFCONFIG4_x = "this IPv4 address needs to show up in ifconfig"
# EXPECT_IFCONFIG6_x = "this IPv6 address needs to show up in ifconfig"
# PING4_HOSTS_x = "these hosts musts ping when openvpn is up (IPv4 fping)"
# PING6_HOSTS_x = "these hosts musts ping when openvpn is up (IPv6 fping6)"
#
# Test 1: UDP / p2mp tun
#   specify IPv4+IPv6 addresses expected from server and ping targets
#
RUN_TITLE_1="testing tun/udp/ipv4+ipv6"
OPENVPN_CONF_1="$OPENVPN_BASE_P2MP --dev tun --proto udp --remote ${REMOTE_IP} --port ${REMOTE_PORT}"
EXPECT_IFCONFIG4_1="10.100.50.6"
EXPECT_IFCONFIG6_1="2001:db8:a050::1:0"
PING4_HOSTS_1="10.100.50.1 10.100.0.1"
PING6_HOSTS_1="2001:db8::1 2001:db8:a050::1"

# Test 2: TCP / p2mp tun
#
RUN_TITLE_2="testing tun/tcp/ipv4+ipv6"
OPENVPN_CONF_2="$OPENVPN_BASE_P2MP --dev tun --proto tcp --remote ${REMOTE_IP} --port ${REMOTE_PORT}"
EXPECT_IFCONFIG4_2="10.100.51.6"
EXPECT_IFCONFIG6_2="2001:db8:a051::1:0"
PING4_HOSTS_2="10.100.51.1 10.100.0.1"
PING6_HOSTS_2="2001:db8::1 2001:db8:a051::1"

# Test 3: UDP / p2p tun
# ...

# Test 4: TCP / p2p tun
# ...

# Test 5: UDP / p2mp tap
# ...

# Test 6: TCP / p2mp tun
# ...

# Test 7: UDP / p2p tap
# ...

# Test 8: TCP / p2p tap
# ...

# Test 9: whatever you want to test... :-)
